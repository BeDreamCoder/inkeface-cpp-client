// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chaincode.proto

#ifndef PROTOBUF_chaincode_2eproto__INCLUDED
#define PROTOBUF_chaincode_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_chaincode_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsChaincodeIDImpl();
void InitDefaultsChaincodeID();
void InitDefaultsChaincodeInputImpl();
void InitDefaultsChaincodeInput();
void InitDefaultsChaincodeSpecImpl();
void InitDefaultsChaincodeSpec();
void InitDefaultsSenderSpecImpl();
void InitDefaultsSenderSpec();
void InitDefaultsSignContentImpl();
void InitDefaultsSignContent();
void InitDefaultsChaincodeDeploymentSpecImpl();
void InitDefaultsChaincodeDeploymentSpec();
void InitDefaultsChaincodeInvocationSpecImpl();
void InitDefaultsChaincodeInvocationSpec();
inline void InitDefaults() {
  InitDefaultsChaincodeID();
  InitDefaultsChaincodeInput();
  InitDefaultsChaincodeSpec();
  InitDefaultsSenderSpec();
  InitDefaultsSignContent();
  InitDefaultsChaincodeDeploymentSpec();
  InitDefaultsChaincodeInvocationSpec();
}
}  // namespace protobuf_chaincode_2eproto
namespace protos {
class ChaincodeDeploymentSpec;
class ChaincodeDeploymentSpecDefaultTypeInternal;
extern ChaincodeDeploymentSpecDefaultTypeInternal _ChaincodeDeploymentSpec_default_instance_;
class ChaincodeID;
class ChaincodeIDDefaultTypeInternal;
extern ChaincodeIDDefaultTypeInternal _ChaincodeID_default_instance_;
class ChaincodeInput;
class ChaincodeInputDefaultTypeInternal;
extern ChaincodeInputDefaultTypeInternal _ChaincodeInput_default_instance_;
class ChaincodeInvocationSpec;
class ChaincodeInvocationSpecDefaultTypeInternal;
extern ChaincodeInvocationSpecDefaultTypeInternal _ChaincodeInvocationSpec_default_instance_;
class ChaincodeSpec;
class ChaincodeSpecDefaultTypeInternal;
extern ChaincodeSpecDefaultTypeInternal _ChaincodeSpec_default_instance_;
class SenderSpec;
class SenderSpecDefaultTypeInternal;
extern SenderSpecDefaultTypeInternal _SenderSpec_default_instance_;
class SignContent;
class SignContentDefaultTypeInternal;
extern SignContentDefaultTypeInternal _SignContent_default_instance_;
}  // namespace protos
namespace protos {

enum ChaincodeSpec_Type {
  ChaincodeSpec_Type_UNDEFINED = 0,
  ChaincodeSpec_Type_GOLANG = 1,
  ChaincodeSpec_Type_NODE = 2,
  ChaincodeSpec_Type_CAR = 3,
  ChaincodeSpec_Type_JAVA = 4,
  ChaincodeSpec_Type_ChaincodeSpec_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChaincodeSpec_Type_ChaincodeSpec_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChaincodeSpec_Type_IsValid(int value);
const ChaincodeSpec_Type ChaincodeSpec_Type_Type_MIN = ChaincodeSpec_Type_UNDEFINED;
const ChaincodeSpec_Type ChaincodeSpec_Type_Type_MAX = ChaincodeSpec_Type_JAVA;
const int ChaincodeSpec_Type_Type_ARRAYSIZE = ChaincodeSpec_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChaincodeSpec_Type_descriptor();
inline const ::std::string& ChaincodeSpec_Type_Name(ChaincodeSpec_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChaincodeSpec_Type_descriptor(), value);
}
inline bool ChaincodeSpec_Type_Parse(
    const ::std::string& name, ChaincodeSpec_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChaincodeSpec_Type>(
    ChaincodeSpec_Type_descriptor(), name, value);
}
enum ChaincodeDeploymentSpec_ExecutionEnvironment {
  ChaincodeDeploymentSpec_ExecutionEnvironment_DOCKER = 0,
  ChaincodeDeploymentSpec_ExecutionEnvironment_SYSTEM = 1,
  ChaincodeDeploymentSpec_ExecutionEnvironment_ChaincodeDeploymentSpec_ExecutionEnvironment_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChaincodeDeploymentSpec_ExecutionEnvironment_ChaincodeDeploymentSpec_ExecutionEnvironment_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChaincodeDeploymentSpec_ExecutionEnvironment_IsValid(int value);
const ChaincodeDeploymentSpec_ExecutionEnvironment ChaincodeDeploymentSpec_ExecutionEnvironment_ExecutionEnvironment_MIN = ChaincodeDeploymentSpec_ExecutionEnvironment_DOCKER;
const ChaincodeDeploymentSpec_ExecutionEnvironment ChaincodeDeploymentSpec_ExecutionEnvironment_ExecutionEnvironment_MAX = ChaincodeDeploymentSpec_ExecutionEnvironment_SYSTEM;
const int ChaincodeDeploymentSpec_ExecutionEnvironment_ExecutionEnvironment_ARRAYSIZE = ChaincodeDeploymentSpec_ExecutionEnvironment_ExecutionEnvironment_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChaincodeDeploymentSpec_ExecutionEnvironment_descriptor();
inline const ::std::string& ChaincodeDeploymentSpec_ExecutionEnvironment_Name(ChaincodeDeploymentSpec_ExecutionEnvironment value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChaincodeDeploymentSpec_ExecutionEnvironment_descriptor(), value);
}
inline bool ChaincodeDeploymentSpec_ExecutionEnvironment_Parse(
    const ::std::string& name, ChaincodeDeploymentSpec_ExecutionEnvironment* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChaincodeDeploymentSpec_ExecutionEnvironment>(
    ChaincodeDeploymentSpec_ExecutionEnvironment_descriptor(), name, value);
}
enum ConfidentialityLevel {
  PUBLIC = 0,
  CONFIDENTIAL = 1,
  ConfidentialityLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConfidentialityLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConfidentialityLevel_IsValid(int value);
const ConfidentialityLevel ConfidentialityLevel_MIN = PUBLIC;
const ConfidentialityLevel ConfidentialityLevel_MAX = CONFIDENTIAL;
const int ConfidentialityLevel_ARRAYSIZE = ConfidentialityLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConfidentialityLevel_descriptor();
inline const ::std::string& ConfidentialityLevel_Name(ConfidentialityLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConfidentialityLevel_descriptor(), value);
}
inline bool ConfidentialityLevel_Parse(
    const ::std::string& name, ConfidentialityLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConfidentialityLevel>(
    ConfidentialityLevel_descriptor(), name, value);
}
// ===================================================================

class ChaincodeID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.ChaincodeID) */ {
 public:
  ChaincodeID();
  virtual ~ChaincodeID();

  ChaincodeID(const ChaincodeID& from);

  inline ChaincodeID& operator=(const ChaincodeID& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChaincodeID(ChaincodeID&& from) noexcept
    : ChaincodeID() {
    *this = ::std::move(from);
  }

  inline ChaincodeID& operator=(ChaincodeID&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChaincodeID& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChaincodeID* internal_default_instance() {
    return reinterpret_cast<const ChaincodeID*>(
               &_ChaincodeID_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ChaincodeID* other);
  friend void swap(ChaincodeID& a, ChaincodeID& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChaincodeID* New() const PROTOBUF_FINAL { return New(NULL); }

  ChaincodeID* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChaincodeID& from);
  void MergeFrom(const ChaincodeID& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChaincodeID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // @@protoc_insertion_point(class_scope:protos.ChaincodeID)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  mutable int _cached_size_;
  friend struct ::protobuf_chaincode_2eproto::TableStruct;
  friend void ::protobuf_chaincode_2eproto::InitDefaultsChaincodeIDImpl();
};
// -------------------------------------------------------------------

class ChaincodeInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.ChaincodeInput) */ {
 public:
  ChaincodeInput();
  virtual ~ChaincodeInput();

  ChaincodeInput(const ChaincodeInput& from);

  inline ChaincodeInput& operator=(const ChaincodeInput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChaincodeInput(ChaincodeInput&& from) noexcept
    : ChaincodeInput() {
    *this = ::std::move(from);
  }

  inline ChaincodeInput& operator=(ChaincodeInput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChaincodeInput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChaincodeInput* internal_default_instance() {
    return reinterpret_cast<const ChaincodeInput*>(
               &_ChaincodeInput_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ChaincodeInput* other);
  friend void swap(ChaincodeInput& a, ChaincodeInput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChaincodeInput* New() const PROTOBUF_FINAL { return New(NULL); }

  ChaincodeInput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChaincodeInput& from);
  void MergeFrom(const ChaincodeInput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChaincodeInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes args = 1;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 1;
  const ::std::string& args(int index) const;
  ::std::string* mutable_args(int index);
  void set_args(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_args(int index, ::std::string&& value);
  #endif
  void set_args(int index, const char* value);
  void set_args(int index, const void* value, size_t size);
  ::std::string* add_args();
  void add_args(const ::std::string& value);
  #if LANG_CXX11
  void add_args(::std::string&& value);
  #endif
  void add_args(const char* value);
  void add_args(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& args() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_args();

  // @@protoc_insertion_point(class_scope:protos.ChaincodeInput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> args_;
  mutable int _cached_size_;
  friend struct ::protobuf_chaincode_2eproto::TableStruct;
  friend void ::protobuf_chaincode_2eproto::InitDefaultsChaincodeInputImpl();
};
// -------------------------------------------------------------------

class ChaincodeSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.ChaincodeSpec) */ {
 public:
  ChaincodeSpec();
  virtual ~ChaincodeSpec();

  ChaincodeSpec(const ChaincodeSpec& from);

  inline ChaincodeSpec& operator=(const ChaincodeSpec& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChaincodeSpec(ChaincodeSpec&& from) noexcept
    : ChaincodeSpec() {
    *this = ::std::move(from);
  }

  inline ChaincodeSpec& operator=(ChaincodeSpec&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChaincodeSpec& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChaincodeSpec* internal_default_instance() {
    return reinterpret_cast<const ChaincodeSpec*>(
               &_ChaincodeSpec_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ChaincodeSpec* other);
  friend void swap(ChaincodeSpec& a, ChaincodeSpec& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChaincodeSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  ChaincodeSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChaincodeSpec& from);
  void MergeFrom(const ChaincodeSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChaincodeSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChaincodeSpec_Type Type;
  static const Type UNDEFINED =
    ChaincodeSpec_Type_UNDEFINED;
  static const Type GOLANG =
    ChaincodeSpec_Type_GOLANG;
  static const Type NODE =
    ChaincodeSpec_Type_NODE;
  static const Type CAR =
    ChaincodeSpec_Type_CAR;
  static const Type JAVA =
    ChaincodeSpec_Type_JAVA;
  static inline bool Type_IsValid(int value) {
    return ChaincodeSpec_Type_IsValid(value);
  }
  static const Type Type_MIN =
    ChaincodeSpec_Type_Type_MIN;
  static const Type Type_MAX =
    ChaincodeSpec_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    ChaincodeSpec_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return ChaincodeSpec_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return ChaincodeSpec_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return ChaincodeSpec_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .protos.ChaincodeID chaincode_id = 2;
  bool has_chaincode_id() const;
  void clear_chaincode_id();
  static const int kChaincodeIdFieldNumber = 2;
  const ::protos::ChaincodeID& chaincode_id() const;
  ::protos::ChaincodeID* release_chaincode_id();
  ::protos::ChaincodeID* mutable_chaincode_id();
  void set_allocated_chaincode_id(::protos::ChaincodeID* chaincode_id);

  // .protos.ChaincodeInput input = 3;
  bool has_input() const;
  void clear_input();
  static const int kInputFieldNumber = 3;
  const ::protos::ChaincodeInput& input() const;
  ::protos::ChaincodeInput* release_input();
  ::protos::ChaincodeInput* mutable_input();
  void set_allocated_input(::protos::ChaincodeInput* input);

  // .protos.ChaincodeSpec.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::protos::ChaincodeSpec_Type type() const;
  void set_type(::protos::ChaincodeSpec_Type value);

  // int32 timeout = 4;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 4;
  ::google::protobuf::int32 timeout() const;
  void set_timeout(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.ChaincodeSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protos::ChaincodeID* chaincode_id_;
  ::protos::ChaincodeInput* input_;
  int type_;
  ::google::protobuf::int32 timeout_;
  mutable int _cached_size_;
  friend struct ::protobuf_chaincode_2eproto::TableStruct;
  friend void ::protobuf_chaincode_2eproto::InitDefaultsChaincodeSpecImpl();
};
// -------------------------------------------------------------------

class SenderSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.SenderSpec) */ {
 public:
  SenderSpec();
  virtual ~SenderSpec();

  SenderSpec(const SenderSpec& from);

  inline SenderSpec& operator=(const SenderSpec& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SenderSpec(SenderSpec&& from) noexcept
    : SenderSpec() {
    *this = ::std::move(from);
  }

  inline SenderSpec& operator=(SenderSpec&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SenderSpec& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SenderSpec* internal_default_instance() {
    return reinterpret_cast<const SenderSpec*>(
               &_SenderSpec_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SenderSpec* other);
  friend void swap(SenderSpec& a, SenderSpec& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SenderSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  SenderSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SenderSpec& from);
  void MergeFrom(const SenderSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SenderSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes sender = 1;
  void clear_sender();
  static const int kSenderFieldNumber = 1;
  const ::std::string& sender() const;
  void set_sender(const ::std::string& value);
  #if LANG_CXX11
  void set_sender(::std::string&& value);
  #endif
  void set_sender(const char* value);
  void set_sender(const void* value, size_t size);
  ::std::string* mutable_sender();
  ::std::string* release_sender();
  void set_allocated_sender(::std::string* sender);

  // bytes ink_limit = 3;
  void clear_ink_limit();
  static const int kInkLimitFieldNumber = 3;
  const ::std::string& ink_limit() const;
  void set_ink_limit(const ::std::string& value);
  #if LANG_CXX11
  void set_ink_limit(::std::string&& value);
  #endif
  void set_ink_limit(const char* value);
  void set_ink_limit(const void* value, size_t size);
  ::std::string* mutable_ink_limit();
  ::std::string* release_ink_limit();
  void set_allocated_ink_limit(::std::string* ink_limit);

  // bytes msg = 4;
  void clear_msg();
  static const int kMsgFieldNumber = 4;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const void* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // uint64 counter = 2;
  void clear_counter();
  static const int kCounterFieldNumber = 2;
  ::google::protobuf::uint64 counter() const;
  void set_counter(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protos.SenderSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sender_;
  ::google::protobuf::internal::ArenaStringPtr ink_limit_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::uint64 counter_;
  mutable int _cached_size_;
  friend struct ::protobuf_chaincode_2eproto::TableStruct;
  friend void ::protobuf_chaincode_2eproto::InitDefaultsSenderSpecImpl();
};
// -------------------------------------------------------------------

class SignContent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.SignContent) */ {
 public:
  SignContent();
  virtual ~SignContent();

  SignContent(const SignContent& from);

  inline SignContent& operator=(const SignContent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignContent(SignContent&& from) noexcept
    : SignContent() {
    *this = ::std::move(from);
  }

  inline SignContent& operator=(SignContent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignContent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignContent* internal_default_instance() {
    return reinterpret_cast<const SignContent*>(
               &_SignContent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SignContent* other);
  friend void swap(SignContent& a, SignContent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignContent* New() const PROTOBUF_FINAL { return New(NULL); }

  SignContent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SignContent& from);
  void MergeFrom(const SignContent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SignContent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id_generation_alg = 2;
  void clear_id_generation_alg();
  static const int kIdGenerationAlgFieldNumber = 2;
  const ::std::string& id_generation_alg() const;
  void set_id_generation_alg(const ::std::string& value);
  #if LANG_CXX11
  void set_id_generation_alg(::std::string&& value);
  #endif
  void set_id_generation_alg(const char* value);
  void set_id_generation_alg(const char* value, size_t size);
  ::std::string* mutable_id_generation_alg();
  ::std::string* release_id_generation_alg();
  void set_allocated_id_generation_alg(::std::string* id_generation_alg);

  // .protos.ChaincodeSpec chaincode_spec = 1;
  bool has_chaincode_spec() const;
  void clear_chaincode_spec();
  static const int kChaincodeSpecFieldNumber = 1;
  const ::protos::ChaincodeSpec& chaincode_spec() const;
  ::protos::ChaincodeSpec* release_chaincode_spec();
  ::protos::ChaincodeSpec* mutable_chaincode_spec();
  void set_allocated_chaincode_spec(::protos::ChaincodeSpec* chaincode_spec);

  // .protos.SenderSpec sender_spec = 3;
  bool has_sender_spec() const;
  void clear_sender_spec();
  static const int kSenderSpecFieldNumber = 3;
  const ::protos::SenderSpec& sender_spec() const;
  ::protos::SenderSpec* release_sender_spec();
  ::protos::SenderSpec* mutable_sender_spec();
  void set_allocated_sender_spec(::protos::SenderSpec* sender_spec);

  // @@protoc_insertion_point(class_scope:protos.SignContent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_generation_alg_;
  ::protos::ChaincodeSpec* chaincode_spec_;
  ::protos::SenderSpec* sender_spec_;
  mutable int _cached_size_;
  friend struct ::protobuf_chaincode_2eproto::TableStruct;
  friend void ::protobuf_chaincode_2eproto::InitDefaultsSignContentImpl();
};
// -------------------------------------------------------------------

class ChaincodeDeploymentSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.ChaincodeDeploymentSpec) */ {
 public:
  ChaincodeDeploymentSpec();
  virtual ~ChaincodeDeploymentSpec();

  ChaincodeDeploymentSpec(const ChaincodeDeploymentSpec& from);

  inline ChaincodeDeploymentSpec& operator=(const ChaincodeDeploymentSpec& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChaincodeDeploymentSpec(ChaincodeDeploymentSpec&& from) noexcept
    : ChaincodeDeploymentSpec() {
    *this = ::std::move(from);
  }

  inline ChaincodeDeploymentSpec& operator=(ChaincodeDeploymentSpec&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChaincodeDeploymentSpec& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChaincodeDeploymentSpec* internal_default_instance() {
    return reinterpret_cast<const ChaincodeDeploymentSpec*>(
               &_ChaincodeDeploymentSpec_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ChaincodeDeploymentSpec* other);
  friend void swap(ChaincodeDeploymentSpec& a, ChaincodeDeploymentSpec& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChaincodeDeploymentSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  ChaincodeDeploymentSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChaincodeDeploymentSpec& from);
  void MergeFrom(const ChaincodeDeploymentSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChaincodeDeploymentSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChaincodeDeploymentSpec_ExecutionEnvironment ExecutionEnvironment;
  static const ExecutionEnvironment DOCKER =
    ChaincodeDeploymentSpec_ExecutionEnvironment_DOCKER;
  static const ExecutionEnvironment SYSTEM =
    ChaincodeDeploymentSpec_ExecutionEnvironment_SYSTEM;
  static inline bool ExecutionEnvironment_IsValid(int value) {
    return ChaincodeDeploymentSpec_ExecutionEnvironment_IsValid(value);
  }
  static const ExecutionEnvironment ExecutionEnvironment_MIN =
    ChaincodeDeploymentSpec_ExecutionEnvironment_ExecutionEnvironment_MIN;
  static const ExecutionEnvironment ExecutionEnvironment_MAX =
    ChaincodeDeploymentSpec_ExecutionEnvironment_ExecutionEnvironment_MAX;
  static const int ExecutionEnvironment_ARRAYSIZE =
    ChaincodeDeploymentSpec_ExecutionEnvironment_ExecutionEnvironment_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ExecutionEnvironment_descriptor() {
    return ChaincodeDeploymentSpec_ExecutionEnvironment_descriptor();
  }
  static inline const ::std::string& ExecutionEnvironment_Name(ExecutionEnvironment value) {
    return ChaincodeDeploymentSpec_ExecutionEnvironment_Name(value);
  }
  static inline bool ExecutionEnvironment_Parse(const ::std::string& name,
      ExecutionEnvironment* value) {
    return ChaincodeDeploymentSpec_ExecutionEnvironment_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bytes code_package = 3;
  void clear_code_package();
  static const int kCodePackageFieldNumber = 3;
  const ::std::string& code_package() const;
  void set_code_package(const ::std::string& value);
  #if LANG_CXX11
  void set_code_package(::std::string&& value);
  #endif
  void set_code_package(const char* value);
  void set_code_package(const void* value, size_t size);
  ::std::string* mutable_code_package();
  ::std::string* release_code_package();
  void set_allocated_code_package(::std::string* code_package);

  // .protos.ChaincodeSpec chaincode_spec = 1;
  bool has_chaincode_spec() const;
  void clear_chaincode_spec();
  static const int kChaincodeSpecFieldNumber = 1;
  const ::protos::ChaincodeSpec& chaincode_spec() const;
  ::protos::ChaincodeSpec* release_chaincode_spec();
  ::protos::ChaincodeSpec* mutable_chaincode_spec();
  void set_allocated_chaincode_spec(::protos::ChaincodeSpec* chaincode_spec);

  // .google.protobuf.Timestamp effective_date = 2;
  bool has_effective_date() const;
  void clear_effective_date();
  static const int kEffectiveDateFieldNumber = 2;
  const ::google::protobuf::Timestamp& effective_date() const;
  ::google::protobuf::Timestamp* release_effective_date();
  ::google::protobuf::Timestamp* mutable_effective_date();
  void set_allocated_effective_date(::google::protobuf::Timestamp* effective_date);

  // .protos.ChaincodeDeploymentSpec.ExecutionEnvironment exec_env = 4;
  void clear_exec_env();
  static const int kExecEnvFieldNumber = 4;
  ::protos::ChaincodeDeploymentSpec_ExecutionEnvironment exec_env() const;
  void set_exec_env(::protos::ChaincodeDeploymentSpec_ExecutionEnvironment value);

  // @@protoc_insertion_point(class_scope:protos.ChaincodeDeploymentSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr code_package_;
  ::protos::ChaincodeSpec* chaincode_spec_;
  ::google::protobuf::Timestamp* effective_date_;
  int exec_env_;
  mutable int _cached_size_;
  friend struct ::protobuf_chaincode_2eproto::TableStruct;
  friend void ::protobuf_chaincode_2eproto::InitDefaultsChaincodeDeploymentSpecImpl();
};
// -------------------------------------------------------------------

class ChaincodeInvocationSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.ChaincodeInvocationSpec) */ {
 public:
  ChaincodeInvocationSpec();
  virtual ~ChaincodeInvocationSpec();

  ChaincodeInvocationSpec(const ChaincodeInvocationSpec& from);

  inline ChaincodeInvocationSpec& operator=(const ChaincodeInvocationSpec& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChaincodeInvocationSpec(ChaincodeInvocationSpec&& from) noexcept
    : ChaincodeInvocationSpec() {
    *this = ::std::move(from);
  }

  inline ChaincodeInvocationSpec& operator=(ChaincodeInvocationSpec&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChaincodeInvocationSpec& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChaincodeInvocationSpec* internal_default_instance() {
    return reinterpret_cast<const ChaincodeInvocationSpec*>(
               &_ChaincodeInvocationSpec_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ChaincodeInvocationSpec* other);
  friend void swap(ChaincodeInvocationSpec& a, ChaincodeInvocationSpec& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChaincodeInvocationSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  ChaincodeInvocationSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChaincodeInvocationSpec& from);
  void MergeFrom(const ChaincodeInvocationSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChaincodeInvocationSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id_generation_alg = 2;
  void clear_id_generation_alg();
  static const int kIdGenerationAlgFieldNumber = 2;
  const ::std::string& id_generation_alg() const;
  void set_id_generation_alg(const ::std::string& value);
  #if LANG_CXX11
  void set_id_generation_alg(::std::string&& value);
  #endif
  void set_id_generation_alg(const char* value);
  void set_id_generation_alg(const char* value, size_t size);
  ::std::string* mutable_id_generation_alg();
  ::std::string* release_id_generation_alg();
  void set_allocated_id_generation_alg(::std::string* id_generation_alg);

  // bytes sig = 4;
  void clear_sig();
  static const int kSigFieldNumber = 4;
  const ::std::string& sig() const;
  void set_sig(const ::std::string& value);
  #if LANG_CXX11
  void set_sig(::std::string&& value);
  #endif
  void set_sig(const char* value);
  void set_sig(const void* value, size_t size);
  ::std::string* mutable_sig();
  ::std::string* release_sig();
  void set_allocated_sig(::std::string* sig);

  // .protos.ChaincodeSpec chaincode_spec = 1;
  bool has_chaincode_spec() const;
  void clear_chaincode_spec();
  static const int kChaincodeSpecFieldNumber = 1;
  const ::protos::ChaincodeSpec& chaincode_spec() const;
  ::protos::ChaincodeSpec* release_chaincode_spec();
  ::protos::ChaincodeSpec* mutable_chaincode_spec();
  void set_allocated_chaincode_spec(::protos::ChaincodeSpec* chaincode_spec);

  // .protos.SenderSpec sender_spec = 3;
  bool has_sender_spec() const;
  void clear_sender_spec();
  static const int kSenderSpecFieldNumber = 3;
  const ::protos::SenderSpec& sender_spec() const;
  ::protos::SenderSpec* release_sender_spec();
  ::protos::SenderSpec* mutable_sender_spec();
  void set_allocated_sender_spec(::protos::SenderSpec* sender_spec);

  // @@protoc_insertion_point(class_scope:protos.ChaincodeInvocationSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_generation_alg_;
  ::google::protobuf::internal::ArenaStringPtr sig_;
  ::protos::ChaincodeSpec* chaincode_spec_;
  ::protos::SenderSpec* sender_spec_;
  mutable int _cached_size_;
  friend struct ::protobuf_chaincode_2eproto::TableStruct;
  friend void ::protobuf_chaincode_2eproto::InitDefaultsChaincodeInvocationSpecImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ChaincodeID

// string path = 1;
inline void ChaincodeID::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChaincodeID::path() const {
  // @@protoc_insertion_point(field_get:protos.ChaincodeID.path)
  return path_.GetNoArena();
}
inline void ChaincodeID::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.ChaincodeID.path)
}
#if LANG_CXX11
inline void ChaincodeID::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.ChaincodeID.path)
}
#endif
inline void ChaincodeID::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.ChaincodeID.path)
}
inline void ChaincodeID::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.ChaincodeID.path)
}
inline ::std::string* ChaincodeID::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:protos.ChaincodeID.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChaincodeID::release_path() {
  // @@protoc_insertion_point(field_release:protos.ChaincodeID.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChaincodeID::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:protos.ChaincodeID.path)
}

// string name = 2;
inline void ChaincodeID::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChaincodeID::name() const {
  // @@protoc_insertion_point(field_get:protos.ChaincodeID.name)
  return name_.GetNoArena();
}
inline void ChaincodeID::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.ChaincodeID.name)
}
#if LANG_CXX11
inline void ChaincodeID::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.ChaincodeID.name)
}
#endif
inline void ChaincodeID::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.ChaincodeID.name)
}
inline void ChaincodeID::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.ChaincodeID.name)
}
inline ::std::string* ChaincodeID::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:protos.ChaincodeID.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChaincodeID::release_name() {
  // @@protoc_insertion_point(field_release:protos.ChaincodeID.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChaincodeID::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protos.ChaincodeID.name)
}

// string version = 3;
inline void ChaincodeID::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChaincodeID::version() const {
  // @@protoc_insertion_point(field_get:protos.ChaincodeID.version)
  return version_.GetNoArena();
}
inline void ChaincodeID::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.ChaincodeID.version)
}
#if LANG_CXX11
inline void ChaincodeID::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.ChaincodeID.version)
}
#endif
inline void ChaincodeID::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.ChaincodeID.version)
}
inline void ChaincodeID::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.ChaincodeID.version)
}
inline ::std::string* ChaincodeID::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:protos.ChaincodeID.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChaincodeID::release_version() {
  // @@protoc_insertion_point(field_release:protos.ChaincodeID.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChaincodeID::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:protos.ChaincodeID.version)
}

// -------------------------------------------------------------------

// ChaincodeInput

// repeated bytes args = 1;
inline int ChaincodeInput::args_size() const {
  return args_.size();
}
inline void ChaincodeInput::clear_args() {
  args_.Clear();
}
inline const ::std::string& ChaincodeInput::args(int index) const {
  // @@protoc_insertion_point(field_get:protos.ChaincodeInput.args)
  return args_.Get(index);
}
inline ::std::string* ChaincodeInput::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:protos.ChaincodeInput.args)
  return args_.Mutable(index);
}
inline void ChaincodeInput::set_args(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protos.ChaincodeInput.args)
  args_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ChaincodeInput::set_args(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:protos.ChaincodeInput.args)
  args_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ChaincodeInput::set_args(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protos.ChaincodeInput.args)
}
inline void ChaincodeInput::set_args(int index, const void* value, size_t size) {
  args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protos.ChaincodeInput.args)
}
inline ::std::string* ChaincodeInput::add_args() {
  // @@protoc_insertion_point(field_add_mutable:protos.ChaincodeInput.args)
  return args_.Add();
}
inline void ChaincodeInput::add_args(const ::std::string& value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protos.ChaincodeInput.args)
}
#if LANG_CXX11
inline void ChaincodeInput::add_args(::std::string&& value) {
  args_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protos.ChaincodeInput.args)
}
#endif
inline void ChaincodeInput::add_args(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protos.ChaincodeInput.args)
}
inline void ChaincodeInput::add_args(const void* value, size_t size) {
  args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protos.ChaincodeInput.args)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ChaincodeInput::args() const {
  // @@protoc_insertion_point(field_list:protos.ChaincodeInput.args)
  return args_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ChaincodeInput::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:protos.ChaincodeInput.args)
  return &args_;
}

// -------------------------------------------------------------------

// ChaincodeSpec

// .protos.ChaincodeSpec.Type type = 1;
inline void ChaincodeSpec::clear_type() {
  type_ = 0;
}
inline ::protos::ChaincodeSpec_Type ChaincodeSpec::type() const {
  // @@protoc_insertion_point(field_get:protos.ChaincodeSpec.type)
  return static_cast< ::protos::ChaincodeSpec_Type >(type_);
}
inline void ChaincodeSpec::set_type(::protos::ChaincodeSpec_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protos.ChaincodeSpec.type)
}

// .protos.ChaincodeID chaincode_id = 2;
inline bool ChaincodeSpec::has_chaincode_id() const {
  return this != internal_default_instance() && chaincode_id_ != NULL;
}
inline void ChaincodeSpec::clear_chaincode_id() {
  if (GetArenaNoVirtual() == NULL && chaincode_id_ != NULL) {
    delete chaincode_id_;
  }
  chaincode_id_ = NULL;
}
inline const ::protos::ChaincodeID& ChaincodeSpec::chaincode_id() const {
  const ::protos::ChaincodeID* p = chaincode_id_;
  // @@protoc_insertion_point(field_get:protos.ChaincodeSpec.chaincode_id)
  return p != NULL ? *p : *reinterpret_cast<const ::protos::ChaincodeID*>(
      &::protos::_ChaincodeID_default_instance_);
}
inline ::protos::ChaincodeID* ChaincodeSpec::release_chaincode_id() {
  // @@protoc_insertion_point(field_release:protos.ChaincodeSpec.chaincode_id)
  
  ::protos::ChaincodeID* temp = chaincode_id_;
  chaincode_id_ = NULL;
  return temp;
}
inline ::protos::ChaincodeID* ChaincodeSpec::mutable_chaincode_id() {
  
  if (chaincode_id_ == NULL) {
    chaincode_id_ = new ::protos::ChaincodeID;
  }
  // @@protoc_insertion_point(field_mutable:protos.ChaincodeSpec.chaincode_id)
  return chaincode_id_;
}
inline void ChaincodeSpec::set_allocated_chaincode_id(::protos::ChaincodeID* chaincode_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete chaincode_id_;
  }
  if (chaincode_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chaincode_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chaincode_id, submessage_arena);
    }
    
  } else {
    
  }
  chaincode_id_ = chaincode_id;
  // @@protoc_insertion_point(field_set_allocated:protos.ChaincodeSpec.chaincode_id)
}

// .protos.ChaincodeInput input = 3;
inline bool ChaincodeSpec::has_input() const {
  return this != internal_default_instance() && input_ != NULL;
}
inline void ChaincodeSpec::clear_input() {
  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
}
inline const ::protos::ChaincodeInput& ChaincodeSpec::input() const {
  const ::protos::ChaincodeInput* p = input_;
  // @@protoc_insertion_point(field_get:protos.ChaincodeSpec.input)
  return p != NULL ? *p : *reinterpret_cast<const ::protos::ChaincodeInput*>(
      &::protos::_ChaincodeInput_default_instance_);
}
inline ::protos::ChaincodeInput* ChaincodeSpec::release_input() {
  // @@protoc_insertion_point(field_release:protos.ChaincodeSpec.input)
  
  ::protos::ChaincodeInput* temp = input_;
  input_ = NULL;
  return temp;
}
inline ::protos::ChaincodeInput* ChaincodeSpec::mutable_input() {
  
  if (input_ == NULL) {
    input_ = new ::protos::ChaincodeInput;
  }
  // @@protoc_insertion_point(field_mutable:protos.ChaincodeSpec.input)
  return input_;
}
inline void ChaincodeSpec::set_allocated_input(::protos::ChaincodeInput* input) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_;
  }
  if (input) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input, submessage_arena);
    }
    
  } else {
    
  }
  input_ = input;
  // @@protoc_insertion_point(field_set_allocated:protos.ChaincodeSpec.input)
}

// int32 timeout = 4;
inline void ChaincodeSpec::clear_timeout() {
  timeout_ = 0;
}
inline ::google::protobuf::int32 ChaincodeSpec::timeout() const {
  // @@protoc_insertion_point(field_get:protos.ChaincodeSpec.timeout)
  return timeout_;
}
inline void ChaincodeSpec::set_timeout(::google::protobuf::int32 value) {
  
  timeout_ = value;
  // @@protoc_insertion_point(field_set:protos.ChaincodeSpec.timeout)
}

// -------------------------------------------------------------------

// SenderSpec

// bytes sender = 1;
inline void SenderSpec::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SenderSpec::sender() const {
  // @@protoc_insertion_point(field_get:protos.SenderSpec.sender)
  return sender_.GetNoArena();
}
inline void SenderSpec::set_sender(const ::std::string& value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.SenderSpec.sender)
}
#if LANG_CXX11
inline void SenderSpec::set_sender(::std::string&& value) {
  
  sender_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.SenderSpec.sender)
}
#endif
inline void SenderSpec::set_sender(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.SenderSpec.sender)
}
inline void SenderSpec::set_sender(const void* value, size_t size) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.SenderSpec.sender)
}
inline ::std::string* SenderSpec::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:protos.SenderSpec.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SenderSpec::release_sender() {
  // @@protoc_insertion_point(field_release:protos.SenderSpec.sender)
  
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SenderSpec::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:protos.SenderSpec.sender)
}

// uint64 counter = 2;
inline void SenderSpec::clear_counter() {
  counter_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SenderSpec::counter() const {
  // @@protoc_insertion_point(field_get:protos.SenderSpec.counter)
  return counter_;
}
inline void SenderSpec::set_counter(::google::protobuf::uint64 value) {
  
  counter_ = value;
  // @@protoc_insertion_point(field_set:protos.SenderSpec.counter)
}

// bytes ink_limit = 3;
inline void SenderSpec::clear_ink_limit() {
  ink_limit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SenderSpec::ink_limit() const {
  // @@protoc_insertion_point(field_get:protos.SenderSpec.ink_limit)
  return ink_limit_.GetNoArena();
}
inline void SenderSpec::set_ink_limit(const ::std::string& value) {
  
  ink_limit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.SenderSpec.ink_limit)
}
#if LANG_CXX11
inline void SenderSpec::set_ink_limit(::std::string&& value) {
  
  ink_limit_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.SenderSpec.ink_limit)
}
#endif
inline void SenderSpec::set_ink_limit(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ink_limit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.SenderSpec.ink_limit)
}
inline void SenderSpec::set_ink_limit(const void* value, size_t size) {
  
  ink_limit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.SenderSpec.ink_limit)
}
inline ::std::string* SenderSpec::mutable_ink_limit() {
  
  // @@protoc_insertion_point(field_mutable:protos.SenderSpec.ink_limit)
  return ink_limit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SenderSpec::release_ink_limit() {
  // @@protoc_insertion_point(field_release:protos.SenderSpec.ink_limit)
  
  return ink_limit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SenderSpec::set_allocated_ink_limit(::std::string* ink_limit) {
  if (ink_limit != NULL) {
    
  } else {
    
  }
  ink_limit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ink_limit);
  // @@protoc_insertion_point(field_set_allocated:protos.SenderSpec.ink_limit)
}

// bytes msg = 4;
inline void SenderSpec::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SenderSpec::msg() const {
  // @@protoc_insertion_point(field_get:protos.SenderSpec.msg)
  return msg_.GetNoArena();
}
inline void SenderSpec::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.SenderSpec.msg)
}
#if LANG_CXX11
inline void SenderSpec::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.SenderSpec.msg)
}
#endif
inline void SenderSpec::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.SenderSpec.msg)
}
inline void SenderSpec::set_msg(const void* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.SenderSpec.msg)
}
inline ::std::string* SenderSpec::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:protos.SenderSpec.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SenderSpec::release_msg() {
  // @@protoc_insertion_point(field_release:protos.SenderSpec.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SenderSpec::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:protos.SenderSpec.msg)
}

// -------------------------------------------------------------------

// SignContent

// .protos.ChaincodeSpec chaincode_spec = 1;
inline bool SignContent::has_chaincode_spec() const {
  return this != internal_default_instance() && chaincode_spec_ != NULL;
}
inline void SignContent::clear_chaincode_spec() {
  if (GetArenaNoVirtual() == NULL && chaincode_spec_ != NULL) {
    delete chaincode_spec_;
  }
  chaincode_spec_ = NULL;
}
inline const ::protos::ChaincodeSpec& SignContent::chaincode_spec() const {
  const ::protos::ChaincodeSpec* p = chaincode_spec_;
  // @@protoc_insertion_point(field_get:protos.SignContent.chaincode_spec)
  return p != NULL ? *p : *reinterpret_cast<const ::protos::ChaincodeSpec*>(
      &::protos::_ChaincodeSpec_default_instance_);
}
inline ::protos::ChaincodeSpec* SignContent::release_chaincode_spec() {
  // @@protoc_insertion_point(field_release:protos.SignContent.chaincode_spec)
  
  ::protos::ChaincodeSpec* temp = chaincode_spec_;
  chaincode_spec_ = NULL;
  return temp;
}
inline ::protos::ChaincodeSpec* SignContent::mutable_chaincode_spec() {
  
  if (chaincode_spec_ == NULL) {
    chaincode_spec_ = new ::protos::ChaincodeSpec;
  }
  // @@protoc_insertion_point(field_mutable:protos.SignContent.chaincode_spec)
  return chaincode_spec_;
}
inline void SignContent::set_allocated_chaincode_spec(::protos::ChaincodeSpec* chaincode_spec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete chaincode_spec_;
  }
  if (chaincode_spec) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chaincode_spec = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chaincode_spec, submessage_arena);
    }
    
  } else {
    
  }
  chaincode_spec_ = chaincode_spec;
  // @@protoc_insertion_point(field_set_allocated:protos.SignContent.chaincode_spec)
}

// string id_generation_alg = 2;
inline void SignContent::clear_id_generation_alg() {
  id_generation_alg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignContent::id_generation_alg() const {
  // @@protoc_insertion_point(field_get:protos.SignContent.id_generation_alg)
  return id_generation_alg_.GetNoArena();
}
inline void SignContent::set_id_generation_alg(const ::std::string& value) {
  
  id_generation_alg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.SignContent.id_generation_alg)
}
#if LANG_CXX11
inline void SignContent::set_id_generation_alg(::std::string&& value) {
  
  id_generation_alg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.SignContent.id_generation_alg)
}
#endif
inline void SignContent::set_id_generation_alg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_generation_alg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.SignContent.id_generation_alg)
}
inline void SignContent::set_id_generation_alg(const char* value, size_t size) {
  
  id_generation_alg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.SignContent.id_generation_alg)
}
inline ::std::string* SignContent::mutable_id_generation_alg() {
  
  // @@protoc_insertion_point(field_mutable:protos.SignContent.id_generation_alg)
  return id_generation_alg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignContent::release_id_generation_alg() {
  // @@protoc_insertion_point(field_release:protos.SignContent.id_generation_alg)
  
  return id_generation_alg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignContent::set_allocated_id_generation_alg(::std::string* id_generation_alg) {
  if (id_generation_alg != NULL) {
    
  } else {
    
  }
  id_generation_alg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id_generation_alg);
  // @@protoc_insertion_point(field_set_allocated:protos.SignContent.id_generation_alg)
}

// .protos.SenderSpec sender_spec = 3;
inline bool SignContent::has_sender_spec() const {
  return this != internal_default_instance() && sender_spec_ != NULL;
}
inline void SignContent::clear_sender_spec() {
  if (GetArenaNoVirtual() == NULL && sender_spec_ != NULL) {
    delete sender_spec_;
  }
  sender_spec_ = NULL;
}
inline const ::protos::SenderSpec& SignContent::sender_spec() const {
  const ::protos::SenderSpec* p = sender_spec_;
  // @@protoc_insertion_point(field_get:protos.SignContent.sender_spec)
  return p != NULL ? *p : *reinterpret_cast<const ::protos::SenderSpec*>(
      &::protos::_SenderSpec_default_instance_);
}
inline ::protos::SenderSpec* SignContent::release_sender_spec() {
  // @@protoc_insertion_point(field_release:protos.SignContent.sender_spec)
  
  ::protos::SenderSpec* temp = sender_spec_;
  sender_spec_ = NULL;
  return temp;
}
inline ::protos::SenderSpec* SignContent::mutable_sender_spec() {
  
  if (sender_spec_ == NULL) {
    sender_spec_ = new ::protos::SenderSpec;
  }
  // @@protoc_insertion_point(field_mutable:protos.SignContent.sender_spec)
  return sender_spec_;
}
inline void SignContent::set_allocated_sender_spec(::protos::SenderSpec* sender_spec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sender_spec_;
  }
  if (sender_spec) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sender_spec = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sender_spec, submessage_arena);
    }
    
  } else {
    
  }
  sender_spec_ = sender_spec;
  // @@protoc_insertion_point(field_set_allocated:protos.SignContent.sender_spec)
}

// -------------------------------------------------------------------

// ChaincodeDeploymentSpec

// .protos.ChaincodeSpec chaincode_spec = 1;
inline bool ChaincodeDeploymentSpec::has_chaincode_spec() const {
  return this != internal_default_instance() && chaincode_spec_ != NULL;
}
inline void ChaincodeDeploymentSpec::clear_chaincode_spec() {
  if (GetArenaNoVirtual() == NULL && chaincode_spec_ != NULL) {
    delete chaincode_spec_;
  }
  chaincode_spec_ = NULL;
}
inline const ::protos::ChaincodeSpec& ChaincodeDeploymentSpec::chaincode_spec() const {
  const ::protos::ChaincodeSpec* p = chaincode_spec_;
  // @@protoc_insertion_point(field_get:protos.ChaincodeDeploymentSpec.chaincode_spec)
  return p != NULL ? *p : *reinterpret_cast<const ::protos::ChaincodeSpec*>(
      &::protos::_ChaincodeSpec_default_instance_);
}
inline ::protos::ChaincodeSpec* ChaincodeDeploymentSpec::release_chaincode_spec() {
  // @@protoc_insertion_point(field_release:protos.ChaincodeDeploymentSpec.chaincode_spec)
  
  ::protos::ChaincodeSpec* temp = chaincode_spec_;
  chaincode_spec_ = NULL;
  return temp;
}
inline ::protos::ChaincodeSpec* ChaincodeDeploymentSpec::mutable_chaincode_spec() {
  
  if (chaincode_spec_ == NULL) {
    chaincode_spec_ = new ::protos::ChaincodeSpec;
  }
  // @@protoc_insertion_point(field_mutable:protos.ChaincodeDeploymentSpec.chaincode_spec)
  return chaincode_spec_;
}
inline void ChaincodeDeploymentSpec::set_allocated_chaincode_spec(::protos::ChaincodeSpec* chaincode_spec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete chaincode_spec_;
  }
  if (chaincode_spec) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chaincode_spec = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chaincode_spec, submessage_arena);
    }
    
  } else {
    
  }
  chaincode_spec_ = chaincode_spec;
  // @@protoc_insertion_point(field_set_allocated:protos.ChaincodeDeploymentSpec.chaincode_spec)
}

// .google.protobuf.Timestamp effective_date = 2;
inline bool ChaincodeDeploymentSpec::has_effective_date() const {
  return this != internal_default_instance() && effective_date_ != NULL;
}
inline const ::google::protobuf::Timestamp& ChaincodeDeploymentSpec::effective_date() const {
  const ::google::protobuf::Timestamp* p = effective_date_;
  // @@protoc_insertion_point(field_get:protos.ChaincodeDeploymentSpec.effective_date)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* ChaincodeDeploymentSpec::release_effective_date() {
  // @@protoc_insertion_point(field_release:protos.ChaincodeDeploymentSpec.effective_date)
  
  ::google::protobuf::Timestamp* temp = effective_date_;
  effective_date_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* ChaincodeDeploymentSpec::mutable_effective_date() {
  
  if (effective_date_ == NULL) {
    effective_date_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:protos.ChaincodeDeploymentSpec.effective_date)
  return effective_date_;
}
inline void ChaincodeDeploymentSpec::set_allocated_effective_date(::google::protobuf::Timestamp* effective_date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(effective_date_);
  }
  if (effective_date) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(effective_date)->GetArena();
    if (message_arena != submessage_arena) {
      effective_date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, effective_date, submessage_arena);
    }
    
  } else {
    
  }
  effective_date_ = effective_date;
  // @@protoc_insertion_point(field_set_allocated:protos.ChaincodeDeploymentSpec.effective_date)
}

// bytes code_package = 3;
inline void ChaincodeDeploymentSpec::clear_code_package() {
  code_package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChaincodeDeploymentSpec::code_package() const {
  // @@protoc_insertion_point(field_get:protos.ChaincodeDeploymentSpec.code_package)
  return code_package_.GetNoArena();
}
inline void ChaincodeDeploymentSpec::set_code_package(const ::std::string& value) {
  
  code_package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.ChaincodeDeploymentSpec.code_package)
}
#if LANG_CXX11
inline void ChaincodeDeploymentSpec::set_code_package(::std::string&& value) {
  
  code_package_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.ChaincodeDeploymentSpec.code_package)
}
#endif
inline void ChaincodeDeploymentSpec::set_code_package(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.ChaincodeDeploymentSpec.code_package)
}
inline void ChaincodeDeploymentSpec::set_code_package(const void* value, size_t size) {
  
  code_package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.ChaincodeDeploymentSpec.code_package)
}
inline ::std::string* ChaincodeDeploymentSpec::mutable_code_package() {
  
  // @@protoc_insertion_point(field_mutable:protos.ChaincodeDeploymentSpec.code_package)
  return code_package_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChaincodeDeploymentSpec::release_code_package() {
  // @@protoc_insertion_point(field_release:protos.ChaincodeDeploymentSpec.code_package)
  
  return code_package_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChaincodeDeploymentSpec::set_allocated_code_package(::std::string* code_package) {
  if (code_package != NULL) {
    
  } else {
    
  }
  code_package_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code_package);
  // @@protoc_insertion_point(field_set_allocated:protos.ChaincodeDeploymentSpec.code_package)
}

// .protos.ChaincodeDeploymentSpec.ExecutionEnvironment exec_env = 4;
inline void ChaincodeDeploymentSpec::clear_exec_env() {
  exec_env_ = 0;
}
inline ::protos::ChaincodeDeploymentSpec_ExecutionEnvironment ChaincodeDeploymentSpec::exec_env() const {
  // @@protoc_insertion_point(field_get:protos.ChaincodeDeploymentSpec.exec_env)
  return static_cast< ::protos::ChaincodeDeploymentSpec_ExecutionEnvironment >(exec_env_);
}
inline void ChaincodeDeploymentSpec::set_exec_env(::protos::ChaincodeDeploymentSpec_ExecutionEnvironment value) {
  
  exec_env_ = value;
  // @@protoc_insertion_point(field_set:protos.ChaincodeDeploymentSpec.exec_env)
}

// -------------------------------------------------------------------

// ChaincodeInvocationSpec

// .protos.ChaincodeSpec chaincode_spec = 1;
inline bool ChaincodeInvocationSpec::has_chaincode_spec() const {
  return this != internal_default_instance() && chaincode_spec_ != NULL;
}
inline void ChaincodeInvocationSpec::clear_chaincode_spec() {
  if (GetArenaNoVirtual() == NULL && chaincode_spec_ != NULL) {
    delete chaincode_spec_;
  }
  chaincode_spec_ = NULL;
}
inline const ::protos::ChaincodeSpec& ChaincodeInvocationSpec::chaincode_spec() const {
  const ::protos::ChaincodeSpec* p = chaincode_spec_;
  // @@protoc_insertion_point(field_get:protos.ChaincodeInvocationSpec.chaincode_spec)
  return p != NULL ? *p : *reinterpret_cast<const ::protos::ChaincodeSpec*>(
      &::protos::_ChaincodeSpec_default_instance_);
}
inline ::protos::ChaincodeSpec* ChaincodeInvocationSpec::release_chaincode_spec() {
  // @@protoc_insertion_point(field_release:protos.ChaincodeInvocationSpec.chaincode_spec)
  
  ::protos::ChaincodeSpec* temp = chaincode_spec_;
  chaincode_spec_ = NULL;
  return temp;
}
inline ::protos::ChaincodeSpec* ChaincodeInvocationSpec::mutable_chaincode_spec() {
  
  if (chaincode_spec_ == NULL) {
    chaincode_spec_ = new ::protos::ChaincodeSpec;
  }
  // @@protoc_insertion_point(field_mutable:protos.ChaincodeInvocationSpec.chaincode_spec)
  return chaincode_spec_;
}
inline void ChaincodeInvocationSpec::set_allocated_chaincode_spec(::protos::ChaincodeSpec* chaincode_spec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete chaincode_spec_;
  }
  if (chaincode_spec) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chaincode_spec = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chaincode_spec, submessage_arena);
    }
    
  } else {
    
  }
  chaincode_spec_ = chaincode_spec;
  // @@protoc_insertion_point(field_set_allocated:protos.ChaincodeInvocationSpec.chaincode_spec)
}

// string id_generation_alg = 2;
inline void ChaincodeInvocationSpec::clear_id_generation_alg() {
  id_generation_alg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChaincodeInvocationSpec::id_generation_alg() const {
  // @@protoc_insertion_point(field_get:protos.ChaincodeInvocationSpec.id_generation_alg)
  return id_generation_alg_.GetNoArena();
}
inline void ChaincodeInvocationSpec::set_id_generation_alg(const ::std::string& value) {
  
  id_generation_alg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.ChaincodeInvocationSpec.id_generation_alg)
}
#if LANG_CXX11
inline void ChaincodeInvocationSpec::set_id_generation_alg(::std::string&& value) {
  
  id_generation_alg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.ChaincodeInvocationSpec.id_generation_alg)
}
#endif
inline void ChaincodeInvocationSpec::set_id_generation_alg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_generation_alg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.ChaincodeInvocationSpec.id_generation_alg)
}
inline void ChaincodeInvocationSpec::set_id_generation_alg(const char* value, size_t size) {
  
  id_generation_alg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.ChaincodeInvocationSpec.id_generation_alg)
}
inline ::std::string* ChaincodeInvocationSpec::mutable_id_generation_alg() {
  
  // @@protoc_insertion_point(field_mutable:protos.ChaincodeInvocationSpec.id_generation_alg)
  return id_generation_alg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChaincodeInvocationSpec::release_id_generation_alg() {
  // @@protoc_insertion_point(field_release:protos.ChaincodeInvocationSpec.id_generation_alg)
  
  return id_generation_alg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChaincodeInvocationSpec::set_allocated_id_generation_alg(::std::string* id_generation_alg) {
  if (id_generation_alg != NULL) {
    
  } else {
    
  }
  id_generation_alg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id_generation_alg);
  // @@protoc_insertion_point(field_set_allocated:protos.ChaincodeInvocationSpec.id_generation_alg)
}

// .protos.SenderSpec sender_spec = 3;
inline bool ChaincodeInvocationSpec::has_sender_spec() const {
  return this != internal_default_instance() && sender_spec_ != NULL;
}
inline void ChaincodeInvocationSpec::clear_sender_spec() {
  if (GetArenaNoVirtual() == NULL && sender_spec_ != NULL) {
    delete sender_spec_;
  }
  sender_spec_ = NULL;
}
inline const ::protos::SenderSpec& ChaincodeInvocationSpec::sender_spec() const {
  const ::protos::SenderSpec* p = sender_spec_;
  // @@protoc_insertion_point(field_get:protos.ChaincodeInvocationSpec.sender_spec)
  return p != NULL ? *p : *reinterpret_cast<const ::protos::SenderSpec*>(
      &::protos::_SenderSpec_default_instance_);
}
inline ::protos::SenderSpec* ChaincodeInvocationSpec::release_sender_spec() {
  // @@protoc_insertion_point(field_release:protos.ChaincodeInvocationSpec.sender_spec)
  
  ::protos::SenderSpec* temp = sender_spec_;
  sender_spec_ = NULL;
  return temp;
}
inline ::protos::SenderSpec* ChaincodeInvocationSpec::mutable_sender_spec() {
  
  if (sender_spec_ == NULL) {
    sender_spec_ = new ::protos::SenderSpec;
  }
  // @@protoc_insertion_point(field_mutable:protos.ChaincodeInvocationSpec.sender_spec)
  return sender_spec_;
}
inline void ChaincodeInvocationSpec::set_allocated_sender_spec(::protos::SenderSpec* sender_spec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sender_spec_;
  }
  if (sender_spec) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sender_spec = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sender_spec, submessage_arena);
    }
    
  } else {
    
  }
  sender_spec_ = sender_spec;
  // @@protoc_insertion_point(field_set_allocated:protos.ChaincodeInvocationSpec.sender_spec)
}

// bytes sig = 4;
inline void ChaincodeInvocationSpec::clear_sig() {
  sig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChaincodeInvocationSpec::sig() const {
  // @@protoc_insertion_point(field_get:protos.ChaincodeInvocationSpec.sig)
  return sig_.GetNoArena();
}
inline void ChaincodeInvocationSpec::set_sig(const ::std::string& value) {
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.ChaincodeInvocationSpec.sig)
}
#if LANG_CXX11
inline void ChaincodeInvocationSpec::set_sig(::std::string&& value) {
  
  sig_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.ChaincodeInvocationSpec.sig)
}
#endif
inline void ChaincodeInvocationSpec::set_sig(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.ChaincodeInvocationSpec.sig)
}
inline void ChaincodeInvocationSpec::set_sig(const void* value, size_t size) {
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.ChaincodeInvocationSpec.sig)
}
inline ::std::string* ChaincodeInvocationSpec::mutable_sig() {
  
  // @@protoc_insertion_point(field_mutable:protos.ChaincodeInvocationSpec.sig)
  return sig_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChaincodeInvocationSpec::release_sig() {
  // @@protoc_insertion_point(field_release:protos.ChaincodeInvocationSpec.sig)
  
  return sig_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChaincodeInvocationSpec::set_allocated_sig(::std::string* sig) {
  if (sig != NULL) {
    
  } else {
    
  }
  sig_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sig);
  // @@protoc_insertion_point(field_set_allocated:protos.ChaincodeInvocationSpec.sig)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::protos::ChaincodeSpec_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protos::ChaincodeSpec_Type>() {
  return ::protos::ChaincodeSpec_Type_descriptor();
}
template <> struct is_proto_enum< ::protos::ChaincodeDeploymentSpec_ExecutionEnvironment> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protos::ChaincodeDeploymentSpec_ExecutionEnvironment>() {
  return ::protos::ChaincodeDeploymentSpec_ExecutionEnvironment_descriptor();
}
template <> struct is_proto_enum< ::protos::ConfidentialityLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protos::ConfidentialityLevel>() {
  return ::protos::ConfidentialityLevel_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_chaincode_2eproto__INCLUDED
